sudo: required
language: python
python:
  - "2.7"

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    # Install LibSSL
    - libssl-dev
    # Install Protocol Buffer Compiler
    - protobuf-compiler
    - libprotobuf-dev
services:
  # Start up Docker
  - docker
before_install:
  # Install python protocol buffer & zmq modules
  - "pip install protobuf pyzmq"
  # Get DVS Interfaces
  - git clone https://github.com/AO-StreetArt/DvsInterface.git
  - cd DvsInterface && sudo make install
  # Clone the repository for the python tests
  - cd $TRAVIS_BUILD_DIR
  - git clone https://github.com/AO-StreetArt/0-Meter.git
  - git clone https://github.com/AO-StreetArt/PythonCsvHelper.git
  # Start the docker network
  - docker network create dvs
install:
  - cd $TRAVIS_BUILD_DIR
  # Setup Consul
  - docker pull consul
  - docker run -d --name=registry --network=dvs consul
  # Set up Neo4j
  - docker pull mongo
  - docker run -d --network=dvs --name=document-db mongo
  # Set up Redis
  - docker pull redis
  - docker run --network=dvs --name=cache -d redis
  # Populate Consul Configuration variables
  - docker exec -t registry curl -X PUT -d 'cache--6379----2--5--0' http://localhost:8500/v1/kv/clyman/RedisConnectionString
  - docker exec -t registry curl -X PUT -d 'mongodb://document-db:27017/' http://localhost:8500/v1/kv/clyman/Mongo_ConnectionString
  - docker exec -t registry curl -X PUT -d 'mydb' http://localhost:8500/v1/kv/clyman/Mongo_DbName
  - docker exec -t registry curl -X PUT -d 'test' http://localhost:8500/v1/kv/clyman/Mongo_DbCollection
  - docker exec -t registry curl -X PUT -d 'True' http://localhost:8500/v1/kv/clyman/StampTransactionId
  - docker exec -t registry curl -X PUT -d 'True' http://localhost:8500/v1/kv/clyman/AtomicTransactions
  - docker exec -t registry curl -X PUT -d 'JSON' http://localhost:8500/v1/kv/clyman/DataFormatType
  # Build the Docker Image
  - cd $TRAVIS_BUILD_DIR/scripts/linux && ./build_docker_instance.sh $TRAVIS_BRANCH $TRAVIS_BUILD_DIR
  # Start clyman
  - cd $TRAVIS_BUILD_DIR/scripts/linux && ./run_docker_instance.sh $TRAVIS_BRANCH registry:8500 localhost 5556
before_script:
  # Sleep for a few seconds to ensure everything is started up
  - sleep 5
  # Display which containers are active and the startup logs for each
  - docker ps -a
  - docker logs clyman
  - docker logs cache
  - docker logs document-db
  - docker logs registry
script:
  # Execute the Python Tests

  # Create Test
  - cd $TRAVIS_BUILD_DIR && python 0-Meter/0-meter.py ci/obj_crt.xml
  - tail $TRAVIS_BUILD_DIR/obj_crt.log
  - docker logs --tail 75 clyman

  # Copy the keys returned from the creation test to create the other success CSV's
  - cd $TRAVIS_BUILD_DIR && python PythonCsvHelper/CsvHelper.py obj_crt_out.csv ci/csv/obj_get.csv 0 3
  - cd $TRAVIS_BUILD_DIR && python PythonCsvHelper/CsvHelper.py obj_crt_out.csv ci/csv/obj_upd.csv 0 3
  - cd $TRAVIS_BUILD_DIR && python PythonCsvHelper/CsvHelper.py obj_crt_out.csv ci/csv/obj_delete.csv 0 3

  # Get Test
  - cd $TRAVIS_BUILD_DIR && python 0-Meter/0-meter.py ci/obj_get.xml
  - tail $TRAVIS_BUILD_DIR/obj_get.log
  - docker logs --tail 75 clyman

  # Update Test
  - cd $TRAVIS_BUILD_DIR && python 0-Meter/0-meter.py ci/obj_upd.xml
  - tail $TRAVIS_BUILD_DIR/obj_upd.log
  - docker logs --tail 75 clyman

  # Query Test
  - cd $TRAVIS_BUILD_DIR && python 0-Meter/0-meter.py ci/obj_name_query.xml
  - tail $TRAVIS_BUILD_DIR/obj_name_query.log
  - docker logs --tail 75 clyman

  # Delete Test
  - cd $TRAVIS_BUILD_DIR && python 0-Meter/0-meter.py ci/obj_del.xml
  - tail $TRAVIS_BUILD_DIR/obj_del.log
  - docker logs --tail 75 clyman

  # Failure Tests
  - cd $TRAVIS_BUILD_DIR && python 0-Meter/0-meter.py ci/obj_get_bad.xml
  - tail $TRAVIS_BUILD_DIR/obj_get.log
  - docker logs --tail 60 clyman
  - cd $TRAVIS_BUILD_DIR && python 0-Meter/0-meter.py ci/obj_upd_bad.xml
  - tail $TRAVIS_BUILD_DIR/obj_upd.log
  - docker logs --tail 60 clyman
  - cd $TRAVIS_BUILD_DIR && python 0-Meter/0-meter.py ci/obj_name_query_bad.xml
  - tail $TRAVIS_BUILD_DIR/obj_name_query.log
  - docker logs --tail 60 clyman
  - cd $TRAVIS_BUILD_DIR && python 0-Meter/0-meter.py ci/obj_type_query_bad.xml
  - tail $TRAVIS_BUILD_DIR/obj_type_query.log
  - docker logs --tail 60 clyman
  - cd $TRAVIS_BUILD_DIR && python 0-Meter/0-meter.py ci/obj_del_bad.xml
  - tail $TRAVIS_BUILD_DIR/obj_del.log
  - docker logs --tail 60 clyman
  - cd $TRAVIS_BUILD_DIR && python 0-Meter/0-meter.py ci/obj_crt_bad.xml
  - tail $TRAVIS_BUILD_DIR/obj_crt.log
  - docker logs --tail 60 clyman
after_success:
  # Push the built image to docker hub
- cd $TRAVIS_BUILD_DIR/scripts/linux && ./push_docker_instance.sh $DOCKER_MAIL $DOCKER_UN $DOCKER_PW $TRAVIS_BRANCH $TRAVIS_BUILD_DIR
